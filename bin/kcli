#!/usr/bin/env node

/**
 * Kinesis Broker CLI
 */
const { engines: { node: currentVersion } } = require('../package.json')
const compareVersions = require('compare-versions')
require('colors')
const program = require('caporal')
const { version: CLI_VERSION } = require('../package.json')

const {
  buyCommand,
  sellCommand,
  configCommand,
  orderbookCommand,
  setupCommand,
  healthCheckCommand
} = require('../broker-cli')

const clientVersion = process.version.substring(1)

if (compareVersions(clientVersion, currentVersion) !== 0) {
  console.error(`Wrong node version, required version: ${currentVersion}, your version: ${clientVersion}`.red)
  process.exit(1)
}

/**
 * Initial Program Setup
 */
program
  .version(CLI_VERSION)
  .description('KINESIS BROKER CLI')

/**
 * Initialize Commands
 *
 * We do this initialization to provide closures to each of our commands. Although
 * this may use a little more memory, it allows us to couple arguments/handlers in
 * the same file AND prevents us from cluttering the global scope when using caporal
 *
 * Please use `kcli --help` to see available commands
 */

setupCommand(program)
configCommand(program)
healthCheckCommand(program)

buyCommand(program)
sellCommand(program)
orderbookCommand(program)

program.parse(process.argv)
