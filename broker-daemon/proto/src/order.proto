syntax = "proto3";

import "google/protobuf/empty.proto";

enum Side {
  BID = 0;
  ASK = 1;
}

enum TimeInForce {
  GTC = 0;
  FOK = 1;
  IOC = 2;
}

message CreateBlockOrderRequest {
  string market = 0;
  Side side = 1;
  /**
   * Amounts are expressed in common units for a currency (e.g. BTC) and therefore support decimals
   * Protobuf does not support a decimal type, so we represent it as a string
   */
  string amount = 2;
  oneof price_restriction {
    bool is_market_order = 3;
    /**
     * Prices are decimals but are represented as strings since Protobuf does not support a decimal type
     */
    string limit_price = 4;
  }

  TimeInForce time_in_force = 5 [default = GTC];
}

message CreateBlockOrderResponse {
  string block_order_id = 0;
}

enum BlockOrderStatus {
  ACTIVE = 0;
  CANCELLED = 1;
  COMPLETED = 2;
  FAILED = 3;
}

enum OrderStatus {
  CREATED = 0;
  PLACED = 1;
  FILLED = 2;
  EXECUTED = 3;
  COMPLETED = 4;
  REJECTED = 5;
}

message Order {
  string order_id = 0;
  OrderStatus order_status = 1;
  /**
   * Amounts are expressed in common units for a currency (e.g. BTC) and therefore support decimals
   * Protobuf does not support a decimal type, so we represent it as a string
   */
  string amount = 2;
  /**
   * Prices are decimals but are represented as strings since Protobuf does not support a decimal type
   */
  string price = 3;
}

enum FillStatus {
  CREATED = 0;
  FILLED = 1;
  EXECUTED = 2;
  COMPLETED = 3;
  REJECTED = 4;
}

message Fill {
  string order_id = 0;
  string fill_id = 1;
  FillStatus fill_status = 2;
  /**
   * Amounts are expressed in common units for a currency (e.g. BTC) and therefore support decimals
   * Protobuf does not support a decimal type, so we represent it as a string
   */
  string amount = 3;
  string price = 4;
}

message BlockOrder {
  string block_order_id = 0;
  string market = 1;
  Side side = 2;
  /**
   * Amounts are expressed in common units for a currency (e.g. BTC) and therefore support decimals
   * Protobuf does not support a decimal type, so we represent it as a string
   */
  string amount = 3;
  oneof price_restriction {
    bool is_market_order = 13;
    /**
     * Prices are decimals but are represented as strings since Protobuf does not support a decimal type
     */
    string limit_price = 14;
  }
  TimeInForce time_in_force = 5;
  BlockOrderStatus status = 6;
}

message GetBlockOrderRequest {
  string block_order_id = 0;
}

message GetBlockOrderResponse {
  BlockOrderStatus status = 0;

  string market = 10;
  Side side = 11;
  /**
   * Amounts are expressed in common units for a currency (e.g. BTC) and therefore support decimals
   * Protobuf does not support a decimal type, so we represent it as a string
   */
  string amount = 12;
  oneof price_restriction {
    bool is_market_order = 13;
    /**
     * Prices are decimals but are represented as strings since Protobuf does not support a decimal type
     */
    string limit_price = 14;
  }
  TimeInForce time_in_force = 15;

  string fill_amount = 20;
  repeated Order open_orders = 21;
  repeated Fill fills = 22;
}

message CancelBlockOrderRequest {
  string block_order_id = 0;
}

message GetBlockOrdersResponse {
  repeated BlockOrder block_orders = 1;
}

message GetBlockOrdersRequest {
  string market = 0;
}

service OrderService {
  rpc CreateBlockOrder (CreateBlockOrderRequest) returns (CreateBlockOrderResponse);
  rpc GetBlockOrder (GetBlockOrderRequest) returns (GetBlockOrderResponse);
  rpc CancelBlockOrder (CancelBlockOrderRequest) returns (google.protobuf.Empty);
  rpc GetBlockOrders (GetBlockOrdersRequest) returns (GetBlockOrdersResponse);
}
